cache:
  key: "$CI_JOB_NAME"
  untracked: true

image: anasdox/phpwebbuilder:latest

stages:
  - quality-gates
  - package-app
  - package-docker
  - deploy

variables:
  CI_DEBUG_TRACE: "true"

  #To change for each project
  BASE_DOMAIN: "socles.niji.delivery"
  ARTIFACTORY_GENERIC_REPO_URI: "https://artifactory.niji.delivery/artifactory/niji-socle-drupal-local"
  ARTIFACTORY_DOCKER_REGISTRY: "niji-socle-drupal-docker.artifactory.niji.delivery"
  ARTIFACTORY_USER: "niji-socle"
  #ARTIFACTORY_PASSWORD: set in gitlab secret
  PHP_DOCKER_IMAGE_NAME: "niji-socle-drupal-php"
  PHP_DOCKER_FROM_IMAGE: "${ARTIFACTORY_DOCKER_REGISTRY}/wodby/drupal-php:7.1-3.0.0"
  APACHE_DOCKER_IMAGE_NAME: "niji-socle-drupal-apache"
  APACHE_DOCKER_FROM_IMAGE: "${ARTIFACTORY_DOCKER_REGISTRY}/wodby/php-apache:2.4-2.0.0"

code-sniffer:
  stage: quality-gates
  script:
    - ./automation/bin/build.sh --mode dev
    - ./automation/bin/code_sniffer.sh
  tags:
    - build

package-app-artifact:
  stage: package-app
  script:
    - ./automation/bin/build.sh
    - printf "{\"time\":\"%s\",\"hash\":\"%s\",\"tag\":\"%s\"}" `date -u +%Y-%m-%dT%H:%M:%SZ` ${CI_COMMIT_SHA} ${CI_COMMIT_REF_SLUG} > ./web/version.json
    - |
      tar \
          --exclude-vcs \
          --exclude='docker*.yml' \
          --exclude='setup-dev*' \
          --exclude='settings.local.php' \
          -zcf /tmp/${CI_COMMIT_REF_SLUG}.tar.gz *

    - |
      curl \
          -u${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD} \
          -H "X-Checksum-md5:`md5sum /tmp/${CI_COMMIT_REF_SLUG}.tar.gz | cut -d' ' -f1`" \
          -T /tmp/${CI_COMMIT_REF_SLUG}.tar.gz \
          ${ARTIFACTORY_GENERIC_REPO_URI}/${CI_COMMIT_REF_SLUG}.tar.gz
  tags:
    - build

package-docker-php-artifact:
  stage: package-docker
  image: docker:latest
  script:
  - docker login -u ${ARTIFACTORY_USER} -p ${ARTIFACTORY_PASSWORD} ${ARTIFACTORY_DOCKER_REGISTRY}
  - |
    docker build -t ${PHP_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} \
      --build-arg FROM_IMAGE=${PHP_DOCKER_FROM_IMAGE} \
      --build-arg ARTIFACTORY_USER=${ARTIFACTORY_USER} \
      --build-arg ARTIFACTORY_PASSWORD=${ARTIFACTORY_PASSWORD} \
      --build-arg ARTIFACT_URI=${ARTIFACTORY_GENERIC_REPO_URI}/${CI_COMMIT_REF_SLUG}.tar.gz \
      --build-arg COMMIT_SHA=${CI_COMMIT_SHA} \
      --quiet \
      ./automation/docker
  - docker tag ${PHP_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} $ARTIFACTORY_DOCKER_REGISTRY/${PHP_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}
  - docker push ${ARTIFACTORY_DOCKER_REGISTRY}/${PHP_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}
  tags:
    - build

package-docker-apache-artifact:
  stage: package-docker
  image: docker:latest
  script:
  - docker login -u ${ARTIFACTORY_USER} -p ${ARTIFACTORY_PASSWORD} ${ARTIFACTORY_DOCKER_REGISTRY}
  - |
    docker build -t ${APACHE_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} \
      --build-arg FROM_IMAGE=${APACHE_DOCKER_FROM_IMAGE} \
      --build-arg ARTIFACTORY_USER=${ARTIFACTORY_USER} \
      --build-arg ARTIFACTORY_PASSWORD=${ARTIFACTORY_PASSWORD} \
      --build-arg ARTIFACT_URI=${ARTIFACTORY_GENERIC_REPO_URI}/${CI_COMMIT_REF_SLUG}.tar.gz \
      --build-arg COMMIT_SHA=${CI_COMMIT_SHA} \
      --quiet \
      ./automation/docker
  - docker tag ${APACHE_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG} $ARTIFACTORY_DOCKER_REGISTRY/${APACHE_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}
  - docker push ${ARTIFACTORY_DOCKER_REGISTRY}/${APACHE_DOCKER_IMAGE_NAME}:${CI_COMMIT_REF_SLUG}
  tags:
    - build

# https://docs.gitlab.com/ce/ci/yaml/README.html#special-yaml-features
.job-deploy-script-template : &job-deploy-script-definition
  script:
    - "echo \"Deploy to : ${APP_DOMAIN}\""
    - docker login -u ${ARTIFACTORY_USER} -p ${ARTIFACTORY_PASSWORD} ${ARTIFACTORY_DOCKER_REGISTRY}
    - docker-compose -f docker-compose.yml -f docker-compose-deploy.yml pull php apache
    - source /etc/.env && docker-compose -f docker-compose.yml -f docker-compose-deploy.yml up -d
    - source /etc/.env && docker-compose exec -T php ./automation/bin/install.sh
    - source /etc/.env && docker-compose exec -T php ./automation/bin/reset_password.sh

deploy-integ:
  <<: *job-deploy-script-definition
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_PATH_SLUG}_integ
  environment:
    name: integ
    url: http://${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
  only:
    - master
  tags:
    - integ

deploy-dev:
  <<: *job-deploy-script-definition
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_PATH_SLUG}_dev
  when: manual
  environment:
    name: dev
    url: http://${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}
  only:
    - master
  tags:
    - dev

deploy-rec:
  <<: *job-deploy-script-definition
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_PATH_SLUG}_rec
  environment:
    name: rec
    url: http://${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - rec

deploy-demo:
  <<: *job-deploy-script-definition
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_PATH_SLUG}_demo
  environment:
    name: demo
    url: http://${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - demo
