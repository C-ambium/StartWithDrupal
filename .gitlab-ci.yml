cache:
  key: "$CI_BUILD_NAME"
  untracked: true

image: anasdox/phpwebbuilder:latest

stages:
  - build
  - quality-gates
  #- unit-test
  #- package
  - deploy
  #- integration-test
  #- fonctional-test

build:
  stage: build
  script:
    - ./automation/bin/build.sh
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    untracked: true
    expire_in: 1 week
    paths:
      - .
  tags:
    - build

code-sniffer:
  stage: quality-gates
  dependencies:
    - build
  script:
    - ./automation/bin/code_sniffer.sh
  tags:
    - build

deploy_review:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}.review.${BASE_DOMAIN}
  script:
    - "bash echo \"Deploy to : .${BASE_OMAIN}\""
  environment:
    name: review/${CI_COMMIT_REF_NAME}
    url: http://${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}.review.${BASE_DOMAIN}
  only:
    - branches
  except:
    - master
  tags:
    - review

stop_review:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Remove review app"
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  tags:
    - review

deploy-dev:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}
  script:
    - "bash echo \"Deploy to : .${BASE_OMAIN}\""
  dependencies:
    - build
  environment:
    name: integ
    url: http://${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}
  only:
    - master
  tags:
    - dev

deploy-integ:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
  script:
    - "bash echo \"Deploy to : .${BASE_OMAIN}\""
  dependencies:
    - build
  environment:
    name: integ
    url: http://${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
  only:
    - master
  tags:
    - integ

deploy_rec:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
  script:
    - "bash echo \"Deploy to : .${BASE_OMAIN}\""
  environment:
    name: rec
    url: http://${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - rec

deploy_demo:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
  script:
    - "bash echo \"Deploy to : .${BASE_OMAIN}\""
  environment:
    name: demo
    url: http://${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - demo
