cache:
  key: "$CI_BUILD_NAME"
  untracked: true

image: anasdox/phpwebbuilder:latest

stages:
  - build
  - quality-gates
  #- unit-test
  - package
  - deploy
  #- integration-test
  #- fonctional-test

build:
  stage: build
  script:
    - ./automation/bin/build.sh
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    expire_in: 1 week
    paths:
      - .
  tags:
    - build

code-sniffer:
  stage: quality-gates
  dependencies:
    - build
  script:
    - ./automation/bin/code_sniffer.sh
  tags:
    - build

package:
  stage: package
  dependencies:
    - build
  script:
    - ls -altr
    - tar --exclude-vcs --exclude='./composer.*' --exclude='*.yml' --exclude='./setup-*' --exclude='./*.md' -zcf ${$CI_COMMIT_REF_NAME}.tar.gz .
    - curl -H"Authorization: Bearer ${ARTIFACTORY_ACCESS_TOKEN}" -T ${$CI_COMMIT_REF_NAME}.tar.gz "https://artifactory.niji.delivery/artifactory/niji-socle-drupal-local/${$CI_COMMIT_REF_NAME}.tar.gz"
  tags:
    - build

#deploy-review:
#  stage: deploy
#  variables:
#    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}.review.${BASE_DOMAIN}
#    COMPOSE_PROJECT_NAME: '${CI_PROJECT_PATH_SLUG}_${CI_COMMIT_REF_SLUG}_review'
#  script:
#    - "echo \"Deploy to : ${APP_DOMAIN}\""
#  environment:
#    name: review/${CI_COMMIT_REF_NAME}
#    url: http://${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}.review.${BASE_DOMAIN}
#  only:
#    - branches
#  except:
#    - master
#  tags:
#    - review
#
#stop-review:
#  stage: deploy
#  variables:
#    GIT_STRATEGY: none
#  script:
#    - echo "Remove review app"
#  when: manual
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    action: stop
#  only:
#    - branches
#  tags:
#    - review

deploy-dev:
  stage: deploy
  variables:
    APP_DOMAIN: '${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}'
    COMPOSE_PROJECT_NAME: '${CI_PROJECT_PATH_SLUG}_dev'
  script:
    - "echo \"Deploy to : ${APP_DOMAIN}\""
    - source /etc/.env && docker-compose up -d
  when: manual
  dependencies:
    - build
  environment:
    name: integ
    url: http://${CI_PROJECT_PATH_SLUG}.dev.${BASE_DOMAIN}
  only:
    - master
  tags:
    - dev

deploy-integ:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: '${CI_PROJECT_PATH_SLUG}_integ'
  script:
    - "echo \"Deploy to : ${APP_DOMAIN}\""
    - source /etc/.env && docker-compose up -d
  dependencies:
    - build
  environment:
    name: integ
    url: http://${CI_PROJECT_PATH_SLUG}.integ.${BASE_DOMAIN}
  only:
    - master
  tags:
    - integ

deploy-rec:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: '${CI_PROJECT_PATH_SLUG}_rec'
  script:
    - "echo \"Deploy to : ${APP_DOMAIN}\""
    - source /etc/.env && docker-compose up -d
  environment:
    name: rec
    url: http://${CI_PROJECT_PATH_SLUG}.rec.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - rec

deploy-demo:
  stage: deploy
  variables:
    APP_DOMAIN: ${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
    COMPOSE_PROJECT_NAME: '${CI_PROJECT_PATH_SLUG}_demo'
  script:
    - "echo \"Deploy to : ${APP_DOMAIN}\""
    - source /etc/.env && docker-compose up -d
  environment:
    name: demo
    url: http://${CI_PROJECT_PATH_SLUG}.demo.${BASE_DOMAIN}
  when: manual
  only:
    - ^release.*
  tags:
    - demo
